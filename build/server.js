// Generated by CoffeeScript 1.6.1
(function() {
  var MessageSerializer, WebSocketServer, clearClient, clients, log, logMsg, logServerInfo, logUserInfo, port, pushMessage, wss;

  WebSocketServer = require("ws").Server;

  log = require("util").log;

  MessageSerializer = require("./message.js").MessageSerializer;

  logMsg = function(msg) {
    return log("> " + msg);
  };

  logServerInfo = function(info) {
    return log("# " + info);
  };

  logUserInfo = function(info) {
    return log("@ " + info);
  };

  pushMessage = function(messageObject) {
    var client, _i, _len;
    for (_i = 0, _len = clients.length; _i < _len; _i++) {
      client = clients[_i];
      client.send(MessageSerializer.serialize(messageObject));
    }
    return logMsg(MessageSerializer.serialize(messageObject));
  };

  clearClient = function(client) {
    var cli, i, _i, _len, _results;
    _results = [];
    for (i = _i = 0, _len = clients.length; _i < _len; i = ++_i) {
      cli = clients[i];
      if (cli === client) {
        _results.push(clients.splice(i, 1));
      }
    }
    return _results;
  };

  port = 1337;

  wss = new WebSocketServer({
    port: port
  });

  clients = [];

  logServerInfo("Initated on port " + port);

  wss.on("connection", function(ws) {
    pushMessage({
      timeStamp: Date.now(),
      fromUser: "Server",
      toUser: "global",
      content: "@User connected!"
    });
    logUserInfo("User connected.");
    clients.push(ws);
    ws.on("message", function(message) {
      return pushMessage(MessageSerializer.deserialize(message));
    });
    return ws.on("close", function(code, message) {
      clearClient(ws);
      pushMessage({
        timeStamp: Date.now(),
        fromUser: "Server",
        toUser: "global",
        content: "@User disconnected!"
      });
      return logUserInfo("User disconnected.");
    });
  });

}).call(this);
